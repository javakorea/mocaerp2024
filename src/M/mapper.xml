<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="M">
 	    <select id="selectAnyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
 			SELECT * from MT_LETTCCMMNDETAILCODE 
		</select>
		
		<select id="selectBoardList" parameterType="java.util.Map" resultType="java.util.HashMap">
		/*selectBoardList 게시물 목록조회*/
	    		SELECT 
		        	A.BOARD_PIDX, 
		        	A.BOARD_IDX, 
		        	A.BOARD_DELYN, 
		        	A.BOARD_TITLE, 
		        	A.BOARD_WRITER, 
		        	DATE_FORMAT(A.BOARD_DATE, '%Y-%m-%d %H:%i:%s') as BOARD_DATE ,
		        	DATE_FORMAT(A.UPDATE_DATE,  '%Y-%m-%d %H:%i:%s') as UPDATE_DATE ,
		        	A.BOARD_TYPE,
		        	COUNT(F.CONTENT_ID) AS CNT,
		        	A.BOARD_REPLYCNT
				FROM ${BOARD_TABLE} A 
				LEFT OUTER JOIN ${BOARD_FILE_TABLE} F ON A.BOARD_IDX = F.CONTENT_ID
				
				WHERE 1=1
				AND A.BOARD_DELYN = 'N'
				AND A.BOARD_TYPE = #{BOARD_TYPE}
				<if test="BOARD_WRITER != null and BOARD_WRITER != ''">
		            AND A.BOARD_WRITER like CONCAT('%', #{BOARD_WRITER}, '%')
		        </if>
		        <if test="BOARD_CONT_LIST != null and BOARD_CONT_LIST != ''">
		        	AND (
					<foreach collection="BOARD_CONT_LIST" item="cont" index="K" separator="OR">
						A.BOARD_CONT like CONCAT ('%', #{cont}, '%')
					</foreach>
					)
				</if>
		        <![CDATA[
		        AND A.BOARD_DATE >= STR_TO_DATE(CONCAT(#{FROM},' 00:00:00'), '%Y%m%d %H:%i:%s') AND A.BOARD_DATE <= STR_TO_DATE(CONCAT(#{TO},' 23:59:59'), '%Y%m%d %H:%i:%s')
		        ]]>
		        GROUP BY A.BOARD_IDX
		        ORDER BY A.UPDATE_DATE DESC, A.BOARD_DATE DESC
		        
		        <choose>
					<when test="(OFFSET_ROW != null and !OFFSET_ROW.equals('')) and (PAGE_SIZE != null and !PAGE_SIZE.equals(''))" ><![CDATA[
						limit #{OFFSET_ROW}    ,     #{PAGE_SIZE}
					]]></when>
					<when test="OFFSET_ROW == null" ><![CDATA[

					]]></when>
				</choose>
    </select>
    
    <select id="selectBoardInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
  	  /*selectBoardInfo 게시물 단건조회*/
         SELECT
            A.BOARD_IDX, 
            A.BOARD_TITLE, 
            A.BOARD_CONT, 
            A.BOARD_WRITER,
            DATE_FORMAT(A.BOARD_DATE, '%Y-%m-%d  %H:%i:%s') AS BOARD_DATE
        FROM ${BOARD_TABLE} A
        WHERE 1=1
        <if test="BOARD_IDX != null and BOARD_IDX != ''">
            AND A.BOARD_IDX = #{BOARD_IDX}
        </if>
    </select>
    
    <select id="selectBoardFileList" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/*selectBoardFileList 게시판첨부파일조회*/
        SELECT *
        FROM ${BOARD_FILE_TABLE} A
        WHERE 1=1
        <if test="BOARD_IDX != null and BOARD_IDX != ''">
            AND A.CONTENT_ID = #{BOARD_IDX}
        </if>
        ORDER BY A.FILE_IDX ASC
    </select>

    <insert id="insertBoardInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="BOARD_IDX">
   		 /*insertBoard 게시물 작성*/
           INSERT INTO ${BOARD_TABLE}(
           	BOARD_DELYN,
           	BOARD_TYPE,
            BOARD_TITLE,
            BOARD_CONT,
            BOARD_WRITER,
            BOARD_DATE,
            UPDATE_DATE
           )VALUES (
          		'N',
          		#{BOARD_TYPE},
			#{BOARD_TITLE},
            #{BOARD_CONT},
            #{BOARD_WRITER},
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
           )
    </insert>
        
    <insert id="insert__T_FILE" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="FILE_IDX">
   		 /*"insertT_FILE" 파일등록*/
           INSERT INTO `T_FILE` 
           (
           `FILE_IDX`, `CONTENT_ID`, `FILE_NAME`, `FILE_PATH_SUB`, `FILE_PATH_PARENT`, `FILE_SIZE`, 
           `FILE_ID`, `FILE_DESC`, `THUMBNAIL`, `UPLOAD_SYS`
           ) 
           VALUES
			(
			#{FILE_IDX}, #{CONTENT_ID}, #{FILE_NAME}, #{FILE_PATH_SUB}, #{FILE_PATH_PARENT}, #{FILE_SIZE}, 
			#{FILE_ID}, #{FILE_DESC}, #{THUMBNAIL}, #{UPLOAD_SYS}
			)
		<selectKey keyProperty="FILE_IDX" resultType="string" order="BEFORE">
			select max(FILE_IDX)+1 from T_FILE
		</selectKey>
    </insert>    
    <delete id="delete__T_FILE" parameterType="map">
        /*delete T_FILE 물리삭제*/
      	DELETE FROM T_FILE
		WHERE 1=1
		AND CONTENT_ID = #{CONTENT_ID}
		<if test="FILE_IDX != null and FILE_IDX != ''">
			AND FILE_IDX = #{FILE_IDX}
		</if>
    </delete>
    <update id="update__T_FILE" parameterType="java.util.Map">
         /*updateT_FILE 파일설명수정*/
         UPDATE T_FILE SET 
            FILE_DESC = #{FILE_DESC}
         WHERE 1=1
         AND FILE_IDX=#{FILE_IDX}
         AND CONTENT_ID=#{CONTENT_ID}
    </update>			
	
        
    <update id="updateBoardInfo" parameterType="java.util.Map">
         /*updateBoardInfo 게시물수정*/
         UPDATE ${BOARD_TABLE} SET 
            BOARD_TYPE = #{BOARD_TYPE},
            <if test="BOARD_DELYN != null and BOARD_DELYN != ''">
            	BOARD_DELYN = #{BOARD_DELYN},
            </if>

            BOARD_TITLE = #{BOARD_TITLE},
            BOARD_CONT = #{BOARD_CONT},
            BOARD_WRITER = #{BOARD_WRITER},
            UPDATE_DATE = CURRENT_TIMESTAMP
         WHERE 1=1
         AND BOARD_IDX=#{BOARD_IDX}
    </update>
        
    <delete id="deleteBoard" parameterType="map">
        /*deleteBoard 게시물 물리삭제*/
        		DELETE FROM ${BOARD_TABLE}
				WHERE 1=1
  				AND BOARD_IDX=#{BOARD_IDX}
    </delete>
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
     <select id="selectScheduleList" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/*selectScheduleList 스케줄러 조회*/
		SELECT
			SCH_IDX,
			case
			    when SCH_SUCCESSYN= 'Y' then CONCAT('✔',SCH_TITLE)		
			    else SCH_TITLE
			END AS SCH_TITLE2,
			SCH_TITLE,
			SCH_CONT,
			SCH_WRITER,
			SCH_CREATE_DTTM,
			SCH_CURRENTMONTH,
			SCH_START,
			SCH_END,
			DATE_ADD(SCH_START, INTERVAL 9 HOUR) AS SCH_START_UTC,
			DATE_ADD(SCH_END, INTERVAL 9 HOUR) AS SCH_END_UTC,
			SCH_COLOR ,
			SCH_COLOR AS FUL_COLOR,
			SCH_DELYN,
			SCH_SENDYN,
			SCH_SUCCESSYN
		FROM MT_SCHEDULE
		WHERE 1=1
		AND SCH_DELYN = 'N'
		AND (SCH_CURRENTMONTH = #{SCH_CURRENTMONTH_PREV} OR SCH_CURRENTMONTH = #{SCH_CURRENTMONTH} OR SCH_CURRENTMONTH = #{SCH_CURRENTMONTH_NEXT} )
		<if test="SCH_TODAY != null and SCH_TODAY != ''">
            AND SCH_START like CONCAT('%', #{SCH_TODAY}, '%')
        </if>
    </select>
   	<select id="selectScheduleInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/*selectScheduleInfo 스케줄러 단건조회*/
        SELECT
            SCH_IDX, 
            SCH_TITLE, 
            SCH_CONT, 
            SCH_WRITER,
            SCH_CURRENTMONTH,
            SCH_COLOR,
            SCH_SUCCESSYN,
            DATE_FORMAT(SCH_CREATE_DTTM, '%Y-%m-%d  %H:%i:%s') AS SCH_CREATE_DTTM,
            DATE_FORMAT(SCH_START, '%Y-%m-%d  %H:%i:%s') AS SCH_START,
            DATE_FORMAT(SCH_END, '%Y-%m-%d  %H:%i:%s') AS SCH_END
        FROM MT_SCHEDULE
        WHERE 1=1
        AND SCH_IDX = #{SCH_IDX}
    </select>
    
    <insert id="insertSchedule" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="SCH_IDX">
        /*insertSchedule 스케줄러 작성*/
            INSERT INTO MT_SCHEDULE(
            	SCH_IDX,
            	SCH_TITLE,
           		SCH_CONT,
	            SCH_WRITER,
	            SCH_CREATE_DTTM,
	            SCH_CURRENTMONTH,
	            SCH_START,
	            SCH_END,
	            SCH_COLOR,
	            SCH_DELYN,
	            SCH_SENDYN,
	            SCH_SUCCESSYN
            )VALUES (
            	#{SCH_IDX},
           		CONCAT(#{SCH_TITLE},'---',CAST(#{SCH_IDX} AS CHAR)),
           		#{SCH_CONT},
				#{SCH_WRITER},
	           	CURRENT_TIMESTAMP,
	            #{SCH_CURRENTMONTH},
	            #{SCH_START},
	            #{SCH_END},
	            #{SCH_COLOR},
	            'N',
	            'N',
	            'N'
	          
            )
        <selectKey keyProperty="SCH_IDX" resultType="string" order="BEFORE">
        	/* selectKey in insertSchedule */
			select max(SCH_IDX)+1 from MT_SCHEDULE
		</selectKey>
    </insert>
    
    
    
    
    
    
    
    
    
    
    <insert id="INS_MEMBER" parameterType="java.util.Map" useGeneratedKeys="true"  >
        /*INS_MEMBER 회원가입후 회원세션정보가져오기*/
    	INSERT INTO T_MEMBER
		(
			U_ID, U_EMAIL, U_NAME, U_PHONE, U_REG_DT, U_LEVEL, U_ADDR, U_SOCIAL, U_BIRTH_DT
			,U_S_NAME,U_PUSH_TOKEN
		)
		VALUES(
			#{U_ID}, #{U_EMAIL}, #{U_NAME}, #{U_PHONE}, TO_CHAR(NOW(),'YYYYMMDDHH24MISS'), #{U_LEVEL}, #{U_ADDR}, #{U_SOCIAL}, #{U_BIRTH_DT}
			, #{U_S_NAME}, #{U_PUSH_TOKEN}
		);
        <selectKey keyProperty="R_ID,R_EMAIL,R_NAME,R_PHONE,R_REG_DT,R_LEVEL,R_ADDR,R_SOCIAL,R_BIRTH_DT" resultType="java.util.HashMap" order="AFTER" >
        	/* select result for insert in INS_MEMBER */
			SELECT 
			U_ID AS R_ID, U_EMAIL AS R_EMAIL, U_NAME AS R_NAME, U_PHONE AS R_PHONE, 
			U_REG_DT AS R_REG_DT, U_LEVEL AS R_LEVEL, U_ADDR AS R_ADDR, U_SOCIAL AS R_SOCIAL, U_BIRTH_DT AS R_BIRTH_DT,
			U_S_NAMET AS R_S_NAMET,U_PUSH_TOKEN AS R_PUSH_TOKEN
			FROM T_MEMBER
			WHERE 1=1 AND U_ID = #{U_ID}
		</selectKey>
    </insert>
    <update id="UPT_MEMBER" parameterType="java.util.Map" useGeneratedKeys="true"  >
        /*UPT_MEMBER 회원정보변경시 수정*/
         UPDATE T_MEMBER SET 
         	<if test="U_EMAIL != null and U_EMAIL != ''">U_EMAIL = #{U_EMAIL}, </if>
			<if test="U_NAME != null and U_NAME != ''">U_NAME = #{U_NAME}, </if>
			<if test="U_PHONE != null and U_PHONE != ''">U_PHONE = #{U_PHONE}, </if>
			<if test="U_REG_DT != null and U_REG_DT != ''">U_REG_DT = #{U_REG_DT}, </if>
			<if test="U_LEVEL != null and U_LEVEL != ''">U_LEVEL = #{U_LEVEL},</if> 
			<if test="U_ADDR != null and U_ADDR != ''">U_ADDR = #{U_ADDR},</if> 
			<if test="U_SOCIAL != null and U_SOCIAL != ''">U_SOCIAL = #{U_SOCIAL},</if>
			<if test="U_BIRTH_DT != null and U_BIRTH_DT != ''">U_BIRTH_DT = #{U_BIRTH_DT},</if>	
			<if test="U_S_NAME != null and U_S_NAME != ''">U_S_NAME = #{U_S_NAME},</if>	
			<if test="U_PUSH_TOKEN != null and U_PUSH_TOKEN != ''">U_PUSH_TOKEN = #{U_PUSH_TOKEN},</if>
			U_UPT_DT = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
         WHERE 1=1 AND U_ID = #{U_ID}
    </update>    
   	<select id="SEL_ADMIN" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SEL_ADMIN 최고관리자정보를 읽어옴 */
			SELECT 
				U_ID AS R_ID, 
				U_EMAIL AS R_EMAIL, 
				U_NAME AS R_NAME, 
				U_PHONE AS R_PHONE, 
				U_REG_DT AS R_REG_DT, 
				U_LEVEL AS R_LEVEL, 
				U_ADDR AS R_ADDR, 
				U_SOCIAL AS R_SOCIAL,
				U_S_NAME AS R_S_NAME,
				U_PUSH_TOKEN AS R_PUSH_TOKEN,
				U_BIRTH_DT AS R_BIRTH_DT
			FROM T_MEMBER
			WHERE 1=1 AND U_LEVEL = '0'
    </select>    
   	<select id="SEL_MEMBER" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SEL_MEMBER */
			SELECT 
			U_ID AS R_ID, 
			U_EMAIL AS R_EMAIL, 
			U_NAME AS R_NAME, 
			U_PHONE AS R_PHONE, 
			U_REG_DT AS R_REG_DT, 
			U_LEVEL AS R_LEVEL, 
			U_ADDR AS R_ADDR, 
			U_SOCIAL AS R_SOCIAL,
			U_S_NAME AS R_S_NAME,
			U_PUSH_TOKEN AS R_PUSH_TOKEN,
			U_BIRTH_DT AS R_BIRTH_DT
			FROM T_MEMBER
			WHERE 1=1 AND U_ID = #{U_ID}
    </select>
   	<select id="SEL_GRP" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SEL_GRP */
			SELECT *
			FROM T_GRP
			WHERE 1=1 AND GRP_NM = #{GRP_NM}
    </select>

    
     <!-- 설정_아이콘 -->
   	<select id="LST_ICO" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* LST_ICO 아이콘_목록조회*/
			SELECT ICO_NM,ICO_MANAGER_ID, ICO_REG_DTTM, ICO_TYPE, ICO, '삭제' AS ICO_BTN
			FROM 	T_ICO
			WHERE 1=1 
			AND ICO_MANAGER_ID = #{ICO_MANAGER_ID}
			ORDER BY 1 DESC				
    </select>
    <insert id="INS_ICO" parameterType="java.util.Map" >
        /*INS_ICO 아이콘등록*/
    	INSERT INTO T_ICO
		(ICO_NM,ICO_MANAGER_ID, ICO_REG_DTTM, ICO_TYPE, ICO)
		VALUES
		(#{ICO_NM},#{ICO_MANAGER_ID},TO_CHAR(NOW(),'YYYYMMDDHH24MISS'),#{ICO_MAX},#{ICO})
    </insert>
    <delete id="DEL_ICO" parameterType="java.util.Map" >
        /*DEL_ICO 아이콘삭제*/
	    DELETE FROM T_ICO
		WHERE 1=1
		AND ICO_NM=#{ICO_NM}
		AND ICO_MANAGER_ID=#{ICO_MANAGER_ID}
    </delete> 
   	<select id="LST_ICO_MY" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* LST_ICO_MY 등록_수정시 나의아이콘_목록조회*/
			SELECT  CONCAT(ICO,' ',ICO_NM) AS DATA, ICO AS CODE
			FROM 	T_ICO
			WHERE 1=1 
			AND ICO_MANAGER_ID = #{GRP_MANAGER_ID}
			ORDER BY 1 DESC				
    </select>
    
    
    
       
    
    <!-- 설정_내채널 -->
   	<select id="LST_GRP" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* LST_GRP 내채널_내채널목록조회*/
			SELECT G.GRP_REG_DTTM,G.GRP_NM,G.GRP_NM AS DATA,G.GRP_NM AS CODE,G.GRP_MEMBER_MAX,COUNT(GM.U_GRP_NM) AS CNT,'삭제' AS GRP_BTN
			FROM 	T_GRP_MEM GM 
					RIGHT OUTER JOIN T_GRP G 
					ON GM.U_GRP_NM = G.GRP_NM
			WHERE 1=1 
			AND G.GRP_MANAGER_ID = #{GRP_MANAGER_ID}
			GROUP BY G.GRP_NM
			ORDER BY 1 DESC				
    </select>
   	<select id="SEL_GRP_MEM" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SEL_GRP_MEM 내채널클릭시_상세구독자조회*/
			SELECT 
			G.U_GRP_NM,G.U_ID,G.GRP_JOIN_DTTM,G.GRP_APPR_DTTM,'승인' AS GRP_BTN,M.U_NAME,M.U_EMAIL
			FROM T_GRP_MEM G,T_MEMBER M
			WHERE 1=1 
			AND G.U_ID = M.U_ID
			AND U_GRP_NM=#{U_GRP_NM}
    </select> 
    <insert id="INS_GRP" parameterType="java.util.Map" >
        /*INS_GRP 채널생성*/
    	INSERT INTO T_GRP
		(GRP_NM,GRP_REG_DTTM,GRP_MANAGER_ID,GRP_MEMBER_MAX)
		VALUES
		(#{GRP_NM},TO_CHAR(NOW(),'YYYYMMDDHH24MISS'),#{GRP_MANAGER_ID},100)
    </insert>
    <delete id="DEL_GRP" parameterType="java.util.Map" >
        /*DEL_GRP 채널삭제_STEP1/3 채널만삭제*/
	    DELETE FROM T_GRP
		WHERE 1=1
		AND GRP_NM=#{GRP_NM}
		AND GRP_MANAGER_ID=#{GRP_MANAGER_ID}
    </delete>
     <delete id="DEL_GRP_MEM_ANYGRP" parameterType="java.util.Map" >
        /*DEL_GRP_MEM_ANYGRP 채널삭제_STEP2/3 채널맴버삭제*/
		DELETE FROM T_GRP_MEM 
		WHERE U_GRP_NM = #{GRP_NM}
    </delete>    
    <delete id="DEL_MAPP_ANYGRP" parameterType="java.util.Map" >
        /*DEL_MAPP_ANYGRP 채널삭제_STEP3/3 채널일정매핑삭제*/
		DELETE FROM T_MAPP 
		WHERE GRP_NM = #{GRP_NM}
    </delete>

       

    <!-- 설정_채널가입 -->
   	<select id="SER_INGRP" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SER_INGRP 설정_채널가입 구독중인채널목록*/
			SELECT U_GRP_NM,U_ID,GRP_JOIN_DTTM,GRP_APPR_DTTM,GRP_APPR_DTTM AS GRP_BTN 
			FROM T_GRP_MEM
			WHERE 1=1 
			AND U_ID = #{U_ID}
			ORDER BY GRP_APPR_DTTM ASC , GRP_JOIN_DTTM DESC
    </select>      
   	<select id="SER_GRP" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SER_GRP 설정_채널가입 가입할채널검색*/
			SELECT GRP_NM,GRP_REG_DTTM,GRP_MANAGER_ID,GRP_MEMBER_MAX,GRP_MEMO,'가입신청' AS GRP_BTN 
			FROM T_GRP
			WHERE 1=1 
			AND GRP_MANAGER_ID != #{GRP_MANAGER_ID}
			AND GRP_NM like CONCAT('%',#{GRP_NM},'%') 
    </select>    
    
    
    
    
    
    
    
    
   
    <insert id="I_CH_JOIN" parameterType="java.util.Map" >
        /*I_CH_JOIN*/
    	INSERT INTO T_GRP_MEM
		(U_GRP_NM,U_ID,GRP_JOIN_DTTM)
		VALUES
		(#{U_GRP_NM},#{U_ID},TO_CHAR(NOW(),'YYYYMMDDHH24MISS'))
    </insert>
    <delete id="DEL_GRP_MEM" parameterType="java.util.Map" >
        /*DEL_GRP_MEM*/
	    DELETE FROM T_GRP_MEM
		WHERE 1=1
		AND U_GRP_NM=#{U_GRP_NM}
		AND U_ID=#{U_ID}
    </delete>  
   	<select id="CHK_GRP_MEM" parameterType="java.util.Map" resultType="java.util.HashMap">
   		/* CHK_GRP_MEM */
	    SELECT * FROM T_GRP_MEM
		WHERE 1=1
		AND U_GRP_NM=#{U_GRP_NM}
		AND U_ID=#{U_ID}
    </select>     
     <update id="UPT_GRP_MEM" parameterType="java.util.Map" >
        /*UPT_GRP_MEM*/
		UPDATE T_GRP_MEM SET 
            GRP_APPR_DTTM = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
         WHERE 1=1
		AND U_GRP_NM=#{U_GRP_NM}
		AND U_ID=#{U_ID}
    </update>    



   	<select id="SEL_GRP_FORSCH" parameterType="java.util.Map" resultType="java.util.HashMap">
   			/* SEL_GRP_FORSCH 스케쥴에 매핑된 그룹리스트 가져오기 */
			SELECT 
			GRP_NM,SCH_WRITER,SCH_START,SCH_IDX
			FROM T_MAPP
			WHERE 1=1 
			AND SCH_WRITER = #{SCH_WRITER}
			AND SCH_START = #{SCH_START}
			AND SCH_IDX = #{SCH_IDX}
    </select> 
    <delete id="DEL_MAPP" parameterType="java.util.Map" >
        /*DEL_MAPP 수정을위한 해당일에 공유전체삭제*/
	    DELETE FROM T_MAPP
		WHERE 1=1 
		AND SCH_WRITER = #{SCH_WRITER}
		AND SCH_START = #{SCH_START}
		AND SCH_IDX = #{SCH_IDX}
    </delete> 
    
    
        
    <insert id="INS_SCHEDULE" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="SCH_IDX">
        /*INS_SCHEDULE 일정등록 STEP1/2*/
    	INSERT INTO T_SCHEDULE
		(
			SCH_WRITER, SCH_START, SCH_IDX, 
			SCH_TITLE, SCH_CONT, SCH_CREATE_DTTM, SCH_CURRENTMONTH, 
			SCH_START_TIME, SCH_END, SCH_END_TIME, SCH_COLOR, 
			SCH_DELYN, SCH_SUCCESSYN, SCH_SENDYN, SCH_ICO
		)
		VALUES(
			#{SCH_WRITER}, #{SCH_START}, #{SCH_IDX}, 
			#{SCH_TITLE}, #{SCH_CONT}, CURRENT_TIMESTAMP, #{SCH_CURRENTMONTH}, 
			#{SCH_START_TIME}, #{SCH_END}, #{SCH_END_TIME}, #{SCH_COLOR},
			'N', 'N', 'N',#{SCH_ICO}
		);
        <selectKey keyProperty="SCH_IDX" resultType="string" order="BEFORE">
        	/* selectKey in INS_SCHEDULE '일정등록'의 BEFORE*/
			SELECT NVL(MAX(SCH_IDX)+1,1) FROM T_SCHEDULE
			WHERE 1=1
			AND SCH_WRITER 	= #{SCH_WRITER}
			AND SCH_START 	= #{SCH_START}
		</selectKey>
    </insert>
    <insert id="INS_MAPP" parameterType="java.util.Map" >
        /*INS_MAPP 일정등록 STEP2/2 일정을채널에공유 등록/수정*/
    	INSERT INTO T_MAPP
		(GRP_NM,SCH_WRITER, SCH_START, SCH_IDX)
		VALUES
		(#{GRP_NM},#{SCH_WRITER}, #{SCH_START}, #{SCH_IDX})
    </insert>
    
        
    <update id="UPT_SCHEDULE" parameterType="java.util.Map" useGeneratedKeys="true">
        /*UPT_SCHEDULE 일정수정,일정삭제 STEP1/2*/
         UPDATE T_SCHEDULE SET 
         	<if test="SCH_START_TIME != null and SCH_START_TIME != ''">SCH_START_TIME = #{SCH_START_TIME}, </if>
			<if test="SCH_END != null and SCH_END != ''">SCH_END = #{SCH_END}, </if>
			<if test="SCH_END_TIME != null and SCH_END_TIME != ''">SCH_END_TIME = #{SCH_END_TIME}, </if>
			<if test="SCH_COLOR != null and SCH_COLOR != ''">SCH_COLOR = #{SCH_COLOR}, </if>
			<if test="SCH_DELYN != null and SCH_DELYN != ''">SCH_DELYN = #{SCH_DELYN},</if> 
			<if test="SCH_SUCCESSYN != null and SCH_SUCCESSYN != ''">SCH_SUCCESSYN = #{SCH_SUCCESSYN},</if> 
			<if test="SCH_SENDYN != null and SCH_SENDYN != ''">SCH_SENDYN = #{SCH_SENDYN},</if>
			<if test="SCH_TITLE != null and SCH_TITLE != ''">SCH_TITLE = #{SCH_TITLE},</if>	
			<if test="SCH_CONT != null and SCH_CONT != ''">SCH_CONT = #{SCH_CONT},</if>	
			SCH_ICO = #{SCH_ICO},
			SCH_UPTDT =  CURRENT_TIMESTAMP
         WHERE 1=1
         AND SCH_WRITER	=#{SCH_WRITER}
         AND SCH_START	=#{SCH_START}
         AND SCH_IDX	=#{SCH_IDX}
    </update>
    <delete id="T_DEL_MAPP" parameterType="java.util.Map" >
        /*T_DEL_MAPP 일정등록 STEP2/2 일정을채널에공유 등록/수정*/
		DELETE FROM T_MAPP 
		WHERE 1=1
		AND SCH_WRITER 	=#{SCH_WRITER}
		AND SCH_START 	=#{SCH_START}
		AND SCH_IDX 	=#{SCH_IDX}
    </delete>

    
    
    
    
    
    
    
    
    
    <!-- 달력 -->
    <select id="SEL_MY_SCH_LIST" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/*SEL_MY_SCH_LIST 나의일정리스트 */
		SELECT
			S.SCH_IDX,
			S.SCH_TITLE,
			S.SCH_CONT,
			S.SCH_WRITER,
			S.SCH_CREATE_DTTM,
			S.SCH_CURRENTMONTH,
			S.SCH_START,
			S.SCH_START_TIME,
			S.SCH_END,
			S.SCH_END_TIME,
			S.SCH_COLOR ,
			S.SCH_DELYN,
			S.SCH_SENDYN,
			S.SCH_SUCCESSYN,
			S.SCH_ICO,
			M.GRP_NM
		FROM T_SCHEDULE S,T_MAPP M
		WHERE 1=1
		AND S.SCH_WRITER = M.SCH_WRITER
		AND S.SCH_START = M.SCH_START
		AND S.SCH_IDX = M.SCH_IDX			
		AND S.SCH_DELYN = 'N'
		AND S.SCH_WRITER = #{SCH_WRITER}
		AND S.SCH_CURRENTMONTH IN (#{SCH_CURRENTMONTH_PREV},#{SCH_CURRENTMONTH},#{SCH_CURRENTMONTH_NEXT} )
    </select>
    <select id="SEL_CH_SCH_LIST" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/*SEL_CH_SCH_LIST 나의구독일정리스트 */
		SELECT 
			G.GRP_NM,GM.U_ID,
			S.SCH_WRITER,S.SCH_START,S.SCH_IDX,
			S.SCH_TITLE,S.SCH_CONT,S.SCH_CREATE_DTTM,S.SCH_CURRENTMONTH,
			S.SCH_START_TIME,S.SCH_END,S.SCH_END_TIME,S.SCH_COLOR,
			S.SCH_DELYN,S.SCH_SUCCESSYN,S.SCH_SENDYN,S.SCH_UPTDT,S.SCH_ICO
		FROM 
			T_GRP_MEM 	GM,
			T_MAPP 		PP, 
			T_SCHEDULE 	S,
			T_GRP 		G
		WHERE 1=1
		AND G.GRP_NM 		= PP.GRP_NM
		AND GM.U_GRP_NM 	= PP.GRP_NM
		AND PP.SCH_WRITER 	= S.SCH_WRITER
		AND PP.SCH_START 	= S.SCH_START
		AND PP.SCH_IDX 		= S.SCH_IDX
		AND GM.U_ID 		= #{SCH_WRITER}
		AND GM.GRP_APPR_DTTM IS NOT NULL
		AND S.SCH_CURRENTMONTH IN (#{SCH_CURRENTMONTH_PREV},#{SCH_CURRENTMONTH},#{SCH_CURRENTMONTH_NEXT} )
    </select>

    
    


    <select id="SEL_CRON_MY_TODAY_SCH_LIST" parameterType="java.util.Map" resultType="java.util.HashMap">
		WITH T_SCHEDULE2 AS (
			SELECT  TO_CHAR(NOW(),'YYYYMMDD') AS TODAY,SCH_START, CASE SCH_END WHEN '' THEN SCH_START ELSE SCH_END END AS SCH_END2,
					SCH_IDX,
					SCH_TITLE,
					SCH_CONT,
					SCH_WRITER,
					SCH_CREATE_DTTM,
					SCH_CURRENTMONTH,
					SCH_START_TIME,
					SCH_END,
					SCH_END_TIME,
					SCH_COLOR ,
					SCH_COLOR AS FUL_COLOR,
					SCH_DELYN,
					SCH_SENDYN,
					SCH_SUCCESSYN
			FROM T_SCHEDULE
			WHERE (TO_CHAR(NOW(),'YYYYMMDD') = SCH_START OR TO_CHAR(NOW(),'YYYYMMDD') <![CDATA[>]]> SCH_START)
			AND SCH_SUCCESSYN !='Y'
		)
		SELECT * FROM T_SCHEDULE2 A ,T_MEMBER B
		WHERE (A.TODAY <![CDATA[<]]> A.SCH_END2 OR A.TODAY = A.SCH_END2) AND A.SCH_WRITER = B.U_ID
    </select>






























    
    <update id="updateSchedule" parameterType="java.util.Map">
         /*updateScheduleInfo 스케줄러 수정*/
         UPDATE MT_SCHEDULE SET 
            SCH_CONT = #{SCH_CONT},
            SCH_TITLE = #{SCH_TITLE},
            SCH_START = #{SCH_START},
            SCH_END = #{SCH_END},
            SCH_WRITER = #{SCH_WRITER},
             <if test="SCH_DELYN != null and SCH_DELYN != ''">
            	SCH_DELYN = #{SCH_DELYN},
            </if>
            SCH_SUCCESSYN = #{SCH_SUCCESSYN},
            SCH_COLOR = #{SCH_COLOR}
         WHERE 1=1
         AND SCH_IDX=#{SCH_IDX}
    </update>

    <delete id="deleteSchedule" parameterType="map">
        /*deleteSchedule 스케줄러 물리삭제*/
        		DELETE FROM MT_SCHEDULE
				WHERE 1=1
  				AND SCH_IDX=#{SCH_IDX}
    </delete>
    
    <select id="selectNotSuccessSchedule" parameterType="map" resultType="map">
    	/*selectNotSuccessSchedule 스케줄 미처리건 조회*/
    	SELECT A.*, B.MBTLNUM
		FROM MT_SCHEDULE A LEFT JOIN MT_LETTNEMPLYRINFO 
		B ON A.SCH_WRITER = B.EMPLYR_ID
		WHERE 1=1 
		AND A.SCH_DELYN = 'N' 
		AND A.SCH_SUCCESSYN = 'N'
		AND DATE(A.SCH_START) <![CDATA[<]]> (SELECT CURDATE())
    </select>
    
    <select id="selectTodaySchedule" parameterType="map" resultType="map">
    	/*selectTodaySchedule 스케줄 당일일정 조회*/
       SELECT A.*, B.MBTLNUM
		FROM MT_SCHEDULE A LEFT JOIN MT_LETTNEMPLYRINFO 
		B ON A.SCH_WRITER = B.EMPLYR_ID
		WHERE 1=1 
		AND A.SCH_DELYN = 'N' 
		AND A.SCH_SENDYN = 'N'
		AND A.SCH_SUCCESSYN = 'N'
		AND DATE(A.SCH_START) = (SELECT CURDATE())
    </select>
    
    <select id="selectTomorrowSchedule" parameterType="map" resultType="map">
    	/*selectTomorrowSchedule 스케줄 일정 조회(1일전 조회)*/
       SELECT A.*, B.MBTLNUM
		FROM MT_SCHEDULE A LEFT JOIN MT_LETTNEMPLYRINFO 
		B ON A.SCH_WRITER = B.EMPLYR_ID
		WHERE 1=1 
		AND A.SCH_DELYN = 'N' 
		AND A.SCH_SENDYN = 'N'
		AND A.SCH_SUCCESSYN = 'N'
		AND DATE(A.SCH_START) = (SELECT ADDDATE(CURDATE(), 1))
    </select>
    
    <select id="selectThreeDaysSchedule" parameterType="map" resultType="map">
    	/*selectThreeDaysSchedule 스케줄러 일정 조회(3일전 조회)*/
       SELECT A.*, B.MBTLNUM
		FROM MT_SCHEDULE A LEFT JOIN MT_LETTNEMPLYRINFO 
		B ON A.SCH_WRITER = B.EMPLYR_ID
		WHERE 1=1 
		AND A.SCH_DELYN = 'N' 
		AND A.SCH_SENDYN = 'N'
		AND A.SCH_SUCCESSYN = 'N'
		AND DATE(A.SCH_START) = (SELECT ADDDATE(CURDATE(), 3))
    </select>
    
    <select id="selectAWeekSchedule" parameterType="map" resultType="map">
    	/*selectAWeekSchedule 스케줄러 일정알림 조회(7일전 미리조회)*/
       SELECT A.*, B.MBTLNUM
		FROM MT_SCHEDULE A LEFT JOIN MT_LETTNEMPLYRINFO 
		B ON A.SCH_WRITER = B.EMPLYR_ID
		WHERE 1=1 
		AND A.SCH_DELYN = 'N' 
		AND A.SCH_SENDYN = 'N'
		AND A.SCH_SUCCESSYN = 'N'
		AND DATE(A.SCH_START) = (SELECT ADDDATE(CURDATE(), 7))
    </select>
    
    <update id="updateScheduleSendSmsYn" parameterType="map">
        /* updateScheduleSendSmsYn 스케줄러 일정 SMS보내기 YN업데이트*/
        UPDATE MT_SCHEDULE SET 
        	SCH_SENDYN = 'Y'
        WHERE 1=1
		AND SCH_IDX=#{SCH_IDX}
    </update>
 </mapper>
